plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'maven-publish'
}

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "IS_DEBUG", "false"
        }
        debug {
            buildConfigField "boolean", "IS_DEBUG", "true"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

ext {
    // kotlin
    kotlinVersion = '1.3.50'
    ankoVersion = '0.10.8'

    // koin
    koinVersion = '2.0.1'

    // coroutines
    coroutinesVersion = '1.3.0'

    // network
    retrofitVersion = '2.7.2'
    okhttpVersion = '4.1.0'
    gsonVersion = '2.8.5'

    // debugging
    timberVersion = '4.7.1'
    stethoVersion = '1.5.1'
}

dependencies {
    // kotlin
    api 'androidx.core:core-ktx:1.3.2'

    // coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.3.9'
    api 'net.sourceforge.streamsupport:android-retrostreams:1.7.3'

    // network
    api "com.squareup.retrofit2:retrofit:$retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    api "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    // koin
    api "org.koin:koin-android:$koinVersion"
    api "org.koin:koin-android-scope:$koinVersion"

    // WebSocket
    api 'com.neovisionaries:nv-websocket-client:2.13'

}


def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))
def getVersionName = { ->
    return "0.9.3"
}

def getArtificatId = { ->
    return "dnapayments"
}
publishing {
    publications {
        bar(MavenPublication) {
            groupId 'com.dna.sdk'
            artifactId getArtificatId()
            version getVersionName()
            artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.api.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            /** Configure path of your package repository on Github
             *  Replace GITHUB_USERID with your/organisation Github userID and REPOSITORY with the repository name on GitHub
             */
            url = uri("https://maven.pkg.github.com/DNA-Payments/dnapayments-android-sdk")

            credentials {
                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
            }
        }
    }
}